[{"/Users/issack/Athena/athena-ui/src/index.tsx":"1","/Users/issack/Athena/athena-ui/src/reportWebVitals.ts":"2","/Users/issack/Athena/athena-ui/src/App.tsx":"3","/Users/issack/Athena/athena-ui/src/theme.js":"4","/Users/issack/Athena/athena-ui/src/components/Welcome.tsx":"5","/Users/issack/Athena/athena-ui/src/components/Auth.tsx":"6","/Users/issack/Athena/athena-ui/src/components/PrivateRoute.tsx":"7","/Users/issack/Athena/athena-ui/src/components/TableDetail.tsx":"8","/Users/issack/Athena/athena-ui/src/components/Endpoint.tsx":"9","/Users/issack/Athena/athena-ui/src/components/Home.tsx":"10","/Users/issack/Athena/athena-ui/src/components/AthenaCard.tsx":"11","/Users/issack/Athena/athena-ui/src/forms/GetCubeMetaData.tsx":"12","/Users/issack/Athena/athena-ui/src/forms/GetAllCubes.tsx":"13","/Users/issack/Athena/athena-ui/src/forms/SignUpForm.tsx":"14","/Users/issack/Athena/athena-ui/src/forms/LoginForm.tsx":"15","/Users/issack/Athena/athena-ui/src/components/Conditional.tsx":"16","/Users/issack/Athena/athena-ui/src/components/Copyright.tsx":"17","/Users/issack/Athena/athena-ui/src/components/NavBar.tsx":"18","/Users/issack/Athena/athena-ui/src/components/layout/Layout.tsx":"19","/Users/issack/Athena/athena-ui/src/components/layout/Footer.tsx":"20","/Users/issack/Athena/athena-ui/src/components/layout/Header.tsx":"21","/Users/issack/Athena/athena-ui/src/config/axiosConfig.js":"22"},{"size":440,"mtime":1621566837765,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1610155732784,"results":"25","hashOfConfig":"24"},{"size":1995,"mtime":1621570987379,"results":"26","hashOfConfig":"24"},{"size":439,"mtime":1621557913515,"results":"27","hashOfConfig":"24"},{"size":611,"mtime":1621570987382,"results":"28","hashOfConfig":"24"},{"size":3176,"mtime":1621570987379,"results":"29","hashOfConfig":"24"},{"size":590,"mtime":1621557913507,"results":"30","hashOfConfig":"24"},{"size":1765,"mtime":1621557913507,"results":"31","hashOfConfig":"24"},{"size":1213,"mtime":1621570987380,"results":"32","hashOfConfig":"24"},{"size":817,"mtime":1621570987380,"results":"33","hashOfConfig":"24"},{"size":1199,"mtime":1621557913502,"results":"34","hashOfConfig":"24"},{"size":4725,"mtime":1621570987384,"results":"35","hashOfConfig":"24"},{"size":3425,"mtime":1621570987384,"results":"36","hashOfConfig":"24"},{"size":3305,"mtime":1621557913511,"results":"37","hashOfConfig":"24"},{"size":2530,"mtime":1621557913510,"results":"38","hashOfConfig":"24"},{"size":433,"mtime":1621557913504,"results":"39","hashOfConfig":"24"},{"size":402,"mtime":1621557913504,"results":"40","hashOfConfig":"24"},{"size":1362,"mtime":1621570987381,"results":"41","hashOfConfig":"24"},{"size":554,"mtime":1621570987383,"results":"42","hashOfConfig":"24"},{"size":127,"mtime":1621570987382,"results":"43","hashOfConfig":"24"},{"size":1530,"mtime":1621570987382,"results":"44","hashOfConfig":"24"},{"size":1138,"mtime":1621570987383,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"hvq3t0",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"/Users/issack/Athena/athena-ui/src/index.tsx",[],["98","99"],"/Users/issack/Athena/athena-ui/src/reportWebVitals.ts",[],["100","101"],"/Users/issack/Athena/athena-ui/src/App.tsx",["102"],"import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Auth } from \"./components/Auth\";\nimport { PrivateRoute } from \"./components/PrivateRoute\";\nimport { TableDetail } from \"./components/TableDetail\";\nimport { Endpoint } from \"./components/Endpoint\";\nimport { Welcome } from \"./components/Welcome\";\nimport axios from \"axios\";\nimport { Layout } from \"./components/layout/Layout\";\nimport { Container, Grid } from \"@material-ui/core\";\n\nexport default function App() {\n  const [auth, setAuth] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    const confirmLoggedIn = async () => {\n      const { status } = await axios.post(\n        \"/api/confirm-token\",\n        {},\n        {\n          headers: {\n            Authorization: localStorage.getItem(\"my-jwt\"),\n          },\n        }\n      );\n      setAuth(status === 200);\n    };\n\n    confirmLoggedIn().catch((err) => err);\n    setLoading(false);\n  }, [auth]);\n\n  const logout = () => {\n    localStorage.removeItem(\"my-jwt\");\n    setAuth(false);\n  };\n\n  const login = () => {\n    setAuth(true);\n  };\n\n  if (loading) return <h1>Loading</h1>;\n\n  return (\n    <Layout auth={auth} logout={logout}>\n      <Container>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route\n              path={\"/auth\"}\n              render={(props: any) => (\n                <Auth {...props} auth={auth} login={login} />\n              )}\n            />\n            <PrivateRoute\n              path={\"/:name/detail/:productId\"}\n              component={TableDetail}\n              auth={auth}\n            />\n            <PrivateRoute\n              path={\"/athena/:name\"}\n              component={Endpoint}\n              auth={auth}\n            />\n            <PrivateRoute path={\"/\"} component={Welcome} auth={auth} />\n          </Switch>\n        </Router>\n      </Container>\n    </Layout>\n  );\n}\n","/Users/issack/Athena/athena-ui/src/theme.js",[],["103","104"],"/Users/issack/Athena/athena-ui/src/components/Welcome.tsx",[],"/Users/issack/Athena/athena-ui/src/components/Auth.tsx",[],"/Users/issack/Athena/athena-ui/src/components/PrivateRoute.tsx",[],"/Users/issack/Athena/athena-ui/src/components/TableDetail.tsx",[],"/Users/issack/Athena/athena-ui/src/components/Endpoint.tsx",["105","106"],"// @ts-nocheck\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { GetCubeMetaData } from \"../forms/GetCubeMetaData\";\nimport { GetAllCubes } from \"../forms/GetAllCubes\";\nimport { Box, Container, Grid, Typography } from \"@material-ui/core\";\n\ninterface Props {}\n\nexport const Endpoint: React.FC<Props> = (props) => {\n  const { name } = useParams();\n\n  const getProps = (name: string) => {\n    let form, title;\n    switch (name) {\n      case \"seeAll\":\n        title = \"See All Tables\";\n        form = <GetAllCubes />;\n        break;\n      case \"searchAll\":\n        title = \"Search All Tables\";\n        form = <GetCubeMetaData />;\n        break;\n      default:\n        title = \"three\";\n        form = <GetCubeMetaData />;\n    }\n    return {\n      title: title,\n      form: form,\n    };\n  };\n\n  const { title, form } = getProps(name);\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box my={20}>\n        <Grid direction={\"row\"}>\n          <Grid item xs={12} sm={12}>\n            <Typography align={\"center\"}>{title}</Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <Typography align={\"center\"}>{form}</Typography>\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n};\n","/Users/issack/Athena/athena-ui/src/components/Home.tsx",[],"/Users/issack/Athena/athena-ui/src/components/AthenaCard.tsx",[],"/Users/issack/Athena/athena-ui/src/forms/GetCubeMetaData.tsx",["107"],"// @ts-nocheck\nimport React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Field, Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"formik-material-ui\";\nimport {\n  Button,\n  Card,\n  CardActionArea,\n  CardContent,\n  Grid,\n  Snackbar,\n  Typography,\n} from \"@material-ui/core\";\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\nimport { Conditional } from \"../components/Conditional\";\n\ninterface Props {}\n\nconst axios = require(\"axios\");\n\nconst schema = Yup.object({\n  productId: Yup.number().required(\"Id must be 8 digits long\"),\n});\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport const GetCubeMetaData: React.FC<Props> = () => {\n  const [response, setResponse] = useState({});\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [show, setShow] = useState(false);\n  const { name } = useParams();\n\n  const handleSubmit = async (id: string) => {\n    if (response.productId === id) {\n      setToastMessage(\"Item already exists\");\n      setShow(true);\n      return;\n    }\n    setIsLoading(true);\n    await axios.post(\"/api/v1/getCubeMetaData/\" + id).then(\n      (result: any) => {\n        if (result.data.status === \"FAILED\") {\n          setResponse(result.data.object.split(\".\")[0]);\n        } else {\n          setResponse(result.data.object);\n        }\n      },\n      (error: { message: any }) => {\n        setToastMessage(error.message);\n        setShow(true);\n      }\n    );\n    setIsLoading(false);\n  };\n\n  return (\n    <>\n      <Grid container direction={\"column\"} spacing={2}>\n        <Grid container item direction={\"column\"} xs={12}>\n          <Formik\n            initialValues={{ productId: \"\" }}\n            validationSchema={schema}\n            onSubmit={(values, { setSubmitting }) => {\n              setTimeout(() => {\n                handleSubmit(values.productId);\n                setSubmitting(false);\n              }, 400);\n            }}\n          >\n            {({ isSubmitting }) => (\n              <Form>\n                <Field\n                  component={TextField}\n                  name=\"productId\"\n                  label={\"Product Id\"}\n                  variant=\"standard\"\n                  InputProps={{ notched: true }}\n                />\n                <Button\n                  className={\"mt-2 ml-1\"}\n                  variant=\"contained\"\n                  type=\"submit\"\n                  color={\"primary\"}\n                  disabled={isSubmitting}\n                >\n                  Submit\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </Grid>\n        <Grid container item direction={\"column\"} xs={12}>\n          {toastMessage ? (\n            <Snackbar\n              className={\"mx-auto\"}\n              onClose={() => setShow(false)}\n              show={show}\n              delay={3000}\n              autohide\n            >\n              <Alert severity={\"error\"}>\n                <strong>{toastMessage}</strong>\n              </Alert>\n            </Snackbar>\n          ) : null}\n        </Grid>\n        <Grid container item xs={12} sm={12}>\n          {!isLoading && !_.isEmpty(response) ? (\n            <Card>\n              <CardActionArea\n                style={{ textDecoration: \"none\" }}\n                component={Link}\n                to={`/athena/${name}/detail/${response.productId}`}\n              >\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {response.cubeTitleEn}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    Product ID: {response.productId}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    Status: {response.archiveStatusEn}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    {`From: ${response.cubeStartDate} to ${response.cubeEndDate}`}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    <small>Released: {response.releaseTime}</small>\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          ) : (\n            <Conditional isLoading={isLoading} />\n          )}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n","/Users/issack/Athena/athena-ui/src/forms/GetAllCubes.tsx",[],"/Users/issack/Athena/athena-ui/src/forms/SignUpForm.tsx",[],"/Users/issack/Athena/athena-ui/src/forms/LoginForm.tsx",[],["108","109"],"/Users/issack/Athena/athena-ui/src/components/Conditional.tsx",[],"/Users/issack/Athena/athena-ui/src/components/Copyright.tsx",[],"/Users/issack/Athena/athena-ui/src/components/NavBar.tsx",[],"/Users/issack/Athena/athena-ui/src/components/layout/Layout.tsx",[],"/Users/issack/Athena/athena-ui/src/components/layout/Footer.tsx",[],"/Users/issack/Athena/athena-ui/src/components/layout/Header.tsx",["110"],"// @ts-nocheck\nimport React from \"react\";\nimport {\n  AppBar,\n  Button,\n  Container,\n  Grid,\n  Link,\n  SvgIcon,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { ExitToApp } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\ninterface Props {\n  auth: boolean;\n  logout: () => void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport const Header = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { logout, auth } = props;\n\n  const handleLogout = () => {\n    logout();\n    history.push(\"/\");\n  };\n  return (\n    <div className={classes.root}>\n      <AppBar position={\"static\"}>\n        <Toolbar>\n          <Container>\n            <Grid container direction={\"row\"} alignItems={\"center\"}>\n              <Typography variant=\"h6\" className={classes.title}>\n                <Link underline={\"none\"} color={\"inherit\"} href={\"/\"}>\n                  Issack John\n                </Link>\n              </Typography>\n              {auth && (\n                <Button\n                  color=\"inherit\"\n                  startIcon={<SvgIcon component={ExitToApp} />}\n                  onClick={handleLogout}\n                >\n                  Logout\n                </Button>\n              )}\n            </Grid>\n          </Container>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n","/Users/issack/Athena/athena-ui/src/config/axiosConfig.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":10,"column":21,"nodeType":"119","messageId":"120","endLine":10,"endColumn":25},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"117","severity":1,"message":"121","line":6,"column":10,"nodeType":"119","messageId":"120","endLine":6,"endColumn":13},{"ruleId":"117","severity":1,"message":"122","line":6,"column":15,"nodeType":"119","messageId":"120","endLine":6,"endColumn":24},{"ruleId":"117","severity":1,"message":"123","line":22,"column":7,"nodeType":"119","messageId":"120","endLine":22,"endColumn":12},{"ruleId":"111","replacedBy":"124"},{"ruleId":"113","replacedBy":"125"},{"ruleId":"117","severity":1,"message":"126","line":16,"column":11,"nodeType":"119","messageId":"120","endLine":16,"endColumn":16},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],["127"],["128"],"@typescript-eslint/no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'Container' is defined but never used.","'axios' is assigned a value but never used.",["127"],["128"],"'Props' is defined but never used.","no-global-assign","no-unsafe-negation"]